"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const express_1 = tslib_1.__importDefault(require("express"));
const middlewares_1 = require("../middlewares");
const validate_1 = tslib_1.__importDefault(require("../validators/validate"));
const validators_1 = require("../validators");
const admin_1 = require("../controllers/admin");
const router = express_1.default.Router();
router.get("/users", middlewares_1.authMiddleware, (0, middlewares_1.checkRole)(["admin"]), admin_1.getUsers);
router.post("/users", middlewares_1.authMiddleware, (0, middlewares_1.checkRole)(["admin"]), validators_1.createUserValidator, validate_1.default, admin_1.createUser);
router.put("/users/:id", middlewares_1.authMiddleware, (0, middlewares_1.checkRole)(["admin"]), validators_1.updateUserValidator, validate_1.default, admin_1.updateUser);
router.put("/users/:id/role", middlewares_1.authMiddleware, (0, middlewares_1.checkRole)(["admin"]), validators_1.updateUserRoleValidator, validate_1.default, admin_1.updateUserRole);
router.delete("/users/:id", middlewares_1.authMiddleware, (0, middlewares_1.checkRole)(["admin"]), validators_1.deleteUserValidator, validate_1.default, admin_1.deleteUser);
router.get("/contacts", middlewares_1.authMiddleware, (0, middlewares_1.checkRole)(["admin"]), admin_1.getContacts);
router.post("/contacts", middlewares_1.authMiddleware, (0, middlewares_1.checkRole)(["admin"]), validators_1.createContactValidator, validate_1.default, admin_1.createContact);
router.put("/contacts/:id", middlewares_1.authMiddleware, (0, middlewares_1.checkRole)(["admin"]), validators_1.updateContactValidator, validate_1.default, admin_1.updateContact);
router.delete("/contacts/:id", middlewares_1.authMiddleware, (0, middlewares_1.checkRole)(["admin"]), validators_1.deleteContactValidator, validate_1.default, admin_1.deleteContact);
router.get("/categories", middlewares_1.authMiddleware, (0, middlewares_1.checkRole)(["admin"]), admin_1.getCategories);
router.post("/categories", middlewares_1.authMiddleware, (0, middlewares_1.checkRole)(["admin"]), validators_1.createCategoryValidator, validate_1.default, admin_1.createCategory);
router.put("/categories/:id", middlewares_1.authMiddleware, (0, middlewares_1.checkRole)(["admin"]), validators_1.updateCategoryValidator, validate_1.default, admin_1.updateCategory);
router.delete("/categories/:id", middlewares_1.authMiddleware, (0, middlewares_1.checkRole)(["admin"]), validators_1.deleteCategoryValidator, validate_1.default, admin_1.deleteCategory);
router.get("/dashboard/stats", middlewares_1.authMiddleware, (0, middlewares_1.checkRole)(["admin"]), admin_1.getDashboardStats);
router.get("/roles", middlewares_1.authMiddleware, (0, middlewares_1.checkRole)(["admin"]), admin_1.getRoles);
router.post("/roles", middlewares_1.authMiddleware, (0, middlewares_1.checkRole)(["admin"]), validators_1.createRoleValidator, validate_1.default, admin_1.createRole);
router.delete("/roles/:id", middlewares_1.authMiddleware, (0, middlewares_1.checkRole)(["admin"]), validators_1.deleteRoleValidator, validate_1.default, admin_1.deleteRole);
exports.default = router;
